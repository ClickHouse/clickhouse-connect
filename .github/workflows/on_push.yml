name: 'Lint and Test'

on:
  push:
    branches-ignore:
      - '*_test'
      - '*_dev'
      - '*_build'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'VERSION'
      - 'LICENSE'
      - '.github/*.md'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: PyLint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python (3.9)
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r tests/superset_requirements.txt
          pip install -r tests/test_requirements.txt
          pip install pylint==2.14
          python setup.py build_ext --inplace
      - name: Run Pylint
        run: |
          pylint clickhouse_connect
          pylint tests
          pylint examples

  tests:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
        clickhouse-version:
          - '22.3'
          - '22.8'
          - '22.11'
          - '22.12'
          - '23.1'
          - latest

    name: Local Tests Py=${{ matrix.python-version }} CH=${{ matrix.clickhouse-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run ClickHouse Container
        run: docker run
          -d
          -p 8123:8123
          --name clickhouse
          -v /var/lib/clickhouse
          -v ${{ github.workspace }}/tests/integration_tests/test_config.xml:/etc/clickhouse-server/conf.d/test_config.xml
          --ulimit nofile=262144:262144
          clickhouse/clickhouse-server:${{ matrix.clickhouse-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pip
        run:  python -m pip install --upgrade pip
      - name: Install Superset dependencies
        if: contains(fromJson('["3.8", "3.9"]'), matrix.python-version)
        run: pip install -r tests/superset_requirements.txt
      - name: Install Test Dependencies
        run: pip install -r tests/test_requirements.txt
      - name: Build cython extensions
        run: python setup.py build_ext --inplace
      - name: Run tests
        env:
          CLICKHOUSE_CONNECT_TEST_DOCKER: 'False'
          CLICKHOUSE_CONNECT_TEST_FUZZ: 50
        run: pytest tests

  cloud-tests:
    runs-on: ubuntu-latest
    name: Cloud Tests Py=${{ matrix.python-version }}
    needs: tests

    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/test_requirements.txt
      - name: Build cython extensions
        run: python setup.py build_ext --inplace
      - name: Run tests
        env:
          CLICKHOUSE_CONNECT_TEST_FUZZ: 10
          CLICKHOUSE_CONNECT_TEST_DOCKER: 'False'
          CLICKHOUSE_CONNECT_TEST_PORT: 8443
          CLICKHOUSE_CONNECT_TEST_INSERT_QUORUM: 3
          CLICKHOUSE_CONNECT_TEST_HOST: ${{ secrets.INTEGRATIONS_TEAM_TESTS_CLOUD_HOST }}
          CLICKHOUSE_CONNECT_TEST_PASSWORD: ${{ secrets.INTEGRATIONS_TEAM_TESTS_CLOUD_PASSWORD }}
        run: pytest tests/integration_tests
