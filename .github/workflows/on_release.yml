name: 'Build and Publish Release'

on:
  release:
    types: [created]
  push:
    branches:
      - '*build*'

jobs:
  update_version:
    name: Update Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Copy Release Version
        if: ${{ github.event == 'release' }}
        run: echo "${{ ( startsWith(github.ref_name, 'v') && github.ref_name ) }}" > VERSION
      - name: Copy Dev Version
        if: ${{ github.event != 'release' }}
        run: cat .dev_version > clickhouse_connect/VERSION
      - name: Commit updated version
        run: |
          git config --global user.name 'Geoff Genz'
          git config --global user.email 'geoff@clickhouse.com'
          git commit -am 'Update Version'
          git push

  build_wheels:
    needs: update_version
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_SKIP: 'cp36-* cp311-*'
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-11
          - macos-12

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.1

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: [update_version, build_wheels]
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build source distribution
        run: |
          rm -rf dist artifacts
          python setup.py sdist
      - name: Retrieve wheels
        uses: actions/download-artifact@v3
        with:
          path: wheelhouse
      - name: move and list artifacts
        run: |
          cp -R artifacts/*/*.whl dist
          cp -R wheelhouse/*.whl dist
          ls -R dist
      - name: Install Twine
        run:  pip install twine
      - name: Publish (Release)
        if: ${{ github.event == 'release' }}
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD:  ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
      - name: Publish (Test)
        if: ${{ github.event == 'release' }}
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
        run: twine --repository testpypi dist/*

