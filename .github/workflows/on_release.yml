name: 'Build and Publish Release'

on:
  release:
    types: [created]
  push:
    branches:
      - '*build*'

env:
  CIBW_SKIP: 'cp36-* cp311-*'

jobs:
  update_version:
    name: Update Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Copy Release Version
        if: ${{ github.event == 'release' }}
        run: echo "${{ ( startsWith(github.ref_name, 'v') && github.ref_name ) }}" > VERSION
      - name: Copy Dev Version
        if: ${{ github.event != 'release' }}
        run: cat .dev_version > clickhouse_connect/VERSION
      - name: Commit updated version
        run: |
          git config --global user.name 'Geoff Genz'
          git config --global user.email 'geoff@clickhouse.com'
          git commit -am 'Update Version'
          git push

  build_x86_linux_wheels:
    name: Build wheels on Linux
    needs: update_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.1
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_wheels_macos:
    name: Build wheels on macos
    needs: update_version
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.1
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: [update_version, build_wheels_macos, build_x86_linux_wheels]
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build source distribution
        run: |
          rm -rf dist 
          python setup.py sdist
      - name: Retrieve wheels
        uses: actions/download-artifact@v3
        with:
          path: wheelhouse
      - name: move and list artifacts
        run: |
          cp -R wheelhouse/*.whl dist
          ls -R dist
      - name: Install Twine
        run:  pip install twine
      - name: Publish (Release)
        if: ${{ github.event == 'release' }}
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD:  ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
      - name: Publish (Test)
        if: ${{ github.event == 'release' }}
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
        run: twine --repository testpypi dist/*

