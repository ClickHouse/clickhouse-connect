name: 'Build and Publish Release'

on:
  release:
    types: [created]
  push:
    branches:
      - '*build*'

env:
  CIBW_SKIP: 'cp36-*'
  CIBW_BEFORE_BUILD: pip install cython

jobs:
  build_x86_linux_wheels:
    name: Build x86 wheels on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_nonx86_wheels:
    name: Build non x86 wheels
    runs-on: ubuntu-latest
    env:
      CIBW_ARCHS_LINUX: aarch64
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_macos_wheels:
    name: Build wheels on macos
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    name: Build x86 wheels on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs:
      - build_macos_wheels
      - build_windows_wheels
      - build_x86_linux_wheels
      - build_nonx86_wheels
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build source distribution
        run: |
          rm -rf dist 
          python setup.py sdist
      - name: Retrieve wheels
        uses: actions/download-artifact@v3
        with:
          path: wheelhouse
      - name: move and list artifacts
        run: |
          cp -R wheelhouse/*/*.whl dist
          ls -R dist
      - name: Install Twine
        run:  pip install twine
      - name: Publish (Release)
        if: ${{ github.event.release && startsWith(github.ref_name, 'v') }}
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD:  ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
      - name: Publish (Test)
        if: ${{ !github.event.release }}
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
        run: twine upload --repository testpypi dist/*
